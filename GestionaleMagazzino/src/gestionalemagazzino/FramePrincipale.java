/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestionalemagazzino;

//import com.barcodelib.barcode.QRCode;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import net.glxn.qrgen.QRCode;
import net.glxn.qrgen.image.ImageType;

/**
 *
 * @author lupin
 */
public class FramePrincipale extends javax.swing.JFrame {

    String nome = "Magazzino";
    ArrayList<Prodotto> serieProdotti;

    Magazzino magazzino = new Magazzino(nome);
    DefaultTableModel obj;

    /**
     * Creates new form FramePrincipale
     */
    public FramePrincipale() {
        initComponents();
        this.obj = (DefaultTableModel) jTable1.getModel();
        jTable1.setEnabled(false);
        Color col = new Color(89, 158, 181);
        getContentPane().setBackground(col);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Add = new javax.swing.JButton();
        Modify = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Display = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jTextFieldProdotto = new javax.swing.JTextField();
        jTextFieldCodice = new javax.swing.JTextField();
        jTextFieldDescrizione = new javax.swing.JTextField();
        jTextFieldArrivo = new javax.swing.JTextField();
        jTextFieldDisp = new javax.swing.JTextField();
        jTextFieldFornitore = new javax.swing.JTextField();
        jTextFieldPrezzo = new javax.swing.JTextField();
        jLabelArrivo = new javax.swing.JLabel();
        jLabelDisp = new javax.swing.JLabel();
        jLabelPrezzo = new javax.swing.JLabel();
        jLabelFornitore = new javax.swing.JLabel();
        jLabelDescrizione = new javax.swing.JLabel();
        jLabelCodice = new javax.swing.JLabel();
        jLabelProdotto = new javax.swing.JLabel();
        hide = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Clear = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        outputAll = new javax.swing.JButton();
        Load = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categ. Prodotto", "Codice", "Descrizione", "Fornitore", "Prezzo", "Qtà disponibile", "Qtà in arrivo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/add_icon.png"))); // NOI18N
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Modify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/modify_icon.png"))); // NOI18N
        Modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyActionPerformed(evt);
            }
        });

        Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/save-icon.png"))); // NOI18N
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/delete_icon.png"))); // NOI18N
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Display.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/display_icon.png"))); // NOI18N
        Display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayActionPerformed(evt);
            }
        });

        jTextFieldSearch.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldSearch.setForeground(new java.awt.Color(0, 0, 0));

        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/search_icon.png"))); // NOI18N
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jTextFieldProdotto.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldProdotto.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldProdotto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProdottoActionPerformed(evt);
            }
        });

        jTextFieldCodice.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldCodice.setForeground(new java.awt.Color(0, 0, 0));

        jTextFieldDescrizione.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldDescrizione.setForeground(new java.awt.Color(0, 0, 0));

        jTextFieldArrivo.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldArrivo.setForeground(new java.awt.Color(0, 0, 0));

        jTextFieldDisp.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldDisp.setForeground(new java.awt.Color(0, 0, 0));

        jTextFieldFornitore.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldFornitore.setForeground(new java.awt.Color(0, 0, 0));

        jTextFieldPrezzo.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldPrezzo.setForeground(new java.awt.Color(0, 0, 0));

        jLabelArrivo.setText("Qta arrivo");

        jLabelDisp.setText("Qta disponibile");

        jLabelPrezzo.setText("Prezzo");

        jLabelFornitore.setText("Fornitore");

        jLabelDescrizione.setText("Descrizione");

        jLabelCodice.setText("Codice");

        jLabelProdotto.setText("Categ.Prodotto");

        hide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/hide_icon.png"))); // NOI18N
        hide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideActionPerformed(evt);
            }
        });

        jLabel2.setText("MODIFICA");

        jLabel3.setText("ELIMINA");

        jLabel4.setText("CREA CODICE QR");

        jLabel5.setText("CERCA");

        jLabel6.setText("SALVA");

        Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/clear_icon.png"))); // NOI18N
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        jLabel7.setText("Codice ->");

        outputAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/list_icon.png"))); // NOI18N
        outputAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputAllActionPerformed(evt);
            }
        });

        Load.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionalemagazzino/load_icon.png"))); // NOI18N
        Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadActionPerformed(evt);
            }
        });

        jLabel8.setText("CARICA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(jLabel2)
                                        .addGap(103, 103, 103)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Modify, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(29, 29, 29)
                                                .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(Display, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel4)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addComponent(jLabel5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(124, 124, 124)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(jLabel6)
                                .addGap(107, 107, 107)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(Load, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(91, 91, 91)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldProdotto, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldFornitore, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldCodice, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDescrizione, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPrezzo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelArrivo)
                            .addComponent(jLabelDisp)
                            .addComponent(jLabelPrezzo)
                            .addComponent(jLabelFornitore)
                            .addComponent(jLabelDescrizione)
                            .addComponent(jLabelCodice)
                            .addComponent(Add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldArrivo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelProdotto)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Clear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hide, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(outputAll)
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)))
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Search)
                            .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Display, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Load, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Modify, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(outputAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(hide, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelProdotto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldProdotto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCodice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldCodice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabelDescrizione)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldDescrizione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabelFornitore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldFornitore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabelPrezzo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldPrezzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelDisp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldDisp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelArrivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldArrivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Add)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public static boolean qtaValida(String qta) {
        return qta.matches("\\d+");
    }

    public static boolean prezzoValido(String prezzo) {
        return prezzo.matches("[0-9]{1,13}(\\.[0-9]*)?");
    }

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        String categoria = jTextFieldProdotto.getText();
        String codice = jTextFieldCodice.getText();
        String descrizione = jTextFieldDescrizione.getText();
        String fornitore = jTextFieldFornitore.getText();
        String prezzo1 = jTextFieldPrezzo.getText();
        String qtaDisp1 = jTextFieldDisp.getText();
        String qtaArrivo1 = jTextFieldArrivo.getText();
        if (categoria.equals("")) {
            JOptionPane.showMessageDialog(this, "Inserire tutti i parametri!");
        } else if (codice.equals("")) {
            JOptionPane.showMessageDialog(this, "Inserire tutti i parametri!");
        } else if (descrizione.equals("")) {
            JOptionPane.showMessageDialog(this, "Inserire tutti i parametri!");
        } else if (fornitore.equals("")) {
            JOptionPane.showMessageDialog(this, "Inserire tutti i parametri!");
        } else if (prezzo1.equals("")) {
            JOptionPane.showMessageDialog(this, "Inserire tutti i parametri!");
        } else if (qtaDisp1.equals("")) {
            JOptionPane.showMessageDialog(this, "Inserire tutti i parametri!");
        } else if (qtaArrivo1.equals("")) {
            JOptionPane.showMessageDialog(this, "Inserire tutti i parametri!");
        } else {
            if (!prezzoValido(prezzo1)) {
                JOptionPane.showMessageDialog(this, "Inserire un prezzo accettabile (La virgola è sostituita dal punto)");
            } else {
                double prezzo = Double.parseDouble(prezzo1);
                if (!qtaValida(qtaDisp1) || !qtaValida(qtaArrivo1)) {
                    JOptionPane.showMessageDialog(this, "Inserire una quantità accettabile");
                } else {
                    int qtaDisp = Integer.parseInt(qtaDisp1);
                    int qtaArrivo = Integer.parseInt(qtaArrivo1);
                    if (qtaDisp < 0 || qtaArrivo < 0) {
                        JOptionPane.showMessageDialog(this, "Inserire una quantità accettabile");
                    } else {
                        boolean presente = false;
                        for (int i = 0; i < obj.getRowCount(); i++) {
                            if (obj.getValueAt(i, 1).equals(codice)) {
                                int scelta = JOptionPane.showConfirmDialog(this, "Il codice inserito è già associato ad un altro prodotto: Vuoi aggiornare le quantità del prodotto già esistente?", "CODICE PRODOTTO GIÀ ESISTENTE", JOptionPane.YES_NO_OPTION);
                                if (scelta == JOptionPane.YES_OPTION) {
                                    presente = true;
                                    int qtaDispAttuale = Integer.parseInt(obj.getValueAt(i, 5).toString());
                                    int qtaArrivoAttuale = Integer.parseInt(obj.getValueAt(i, 6).toString());
                                    obj.setValueAt(qtaDispAttuale + qtaDisp, i, 5);
                                    obj.setValueAt(qtaArrivoAttuale + qtaArrivo, i, 6);
                                    magazzino.prodottoGiaEsistente(codice, qtaDisp, qtaArrivo);
                                    break;
                                } else {
                                    presente = true;
                                    break;
                                }
                            }
                        }
                        if (!presente) {
                            Prodotto prodotto = new Prodotto(categoria, codice, descrizione, fornitore, prezzo, qtaDisp, qtaArrivo);
                            magazzino.aggiungiProdotto(prodotto);
                            Object[] row = {prodotto.getCategoria(), prodotto.getCodice(), prodotto.getDescrizione(), prodotto.getFornitore(), prodotto.getPrezzo(), prodotto.getQtaDisp(), prodotto.getQtaArrivo()};
                            obj.addRow(row);

                        }
                    }

                }
            }
    }//GEN-LAST:event_AddActionPerformed
    }

    private void jTextFieldProdottoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProdottoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProdottoActionPerformed

    private ImageIcon createImageIcon(String path) {
        URL imageUrl = getClass().getResource(path);
        if (imageUrl != null) {
            return new ImageIcon(imageUrl);
        } else {
            System.err.println("Impossibile trovare il file: " + path);
            return null;
        }
    }
    private int hideButtonClickCount = 0;
    private void hideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideActionPerformed
        ImageIcon showIcon;
        ImageIcon hideIcon;
        showIcon = createImageIcon("show_icon.png");
        hideIcon = createImageIcon("hide_icon.png");
        hideButtonClickCount++;
        if (hideButtonClickCount % 2 == 1) {
            jLabelProdotto.setVisible(false);
            jLabelCodice.setVisible(false);
            jLabelDescrizione.setVisible(false);
            jLabelFornitore.setVisible(false);
            jLabelPrezzo.setVisible(false);
            jLabelDisp.setVisible(false);
            jLabelArrivo.setVisible(false);
            jTextFieldProdotto.setVisible(false);
            jTextFieldCodice.setVisible(false);
            jTextFieldDescrizione.setVisible(false);
            jTextFieldFornitore.setVisible(false);
            jTextFieldPrezzo.setVisible(false);
            jTextFieldDisp.setVisible(false);
            jTextFieldArrivo.setVisible(false);
            hide.setIcon(showIcon);
            Add.setVisible(false);
        } else if (hideButtonClickCount % 2 == 0) {
            jLabelProdotto.setVisible(true);
            jLabelCodice.setVisible(true);
            jLabelDescrizione.setVisible(true);
            jLabelFornitore.setVisible(true);
            jLabelPrezzo.setVisible(true);
            jLabelDisp.setVisible(true);
            jLabelArrivo.setVisible(true);
            jTextFieldProdotto.setVisible(true);
            jTextFieldCodice.setVisible(true);
            jTextFieldDescrizione.setVisible(true);
            jTextFieldFornitore.setVisible(true);
            jTextFieldPrezzo.setVisible(true);
            jTextFieldDisp.setVisible(true);
            jTextFieldArrivo.setVisible(true);
            hide.setIcon(hideIcon);
            Add.setVisible(true);
        }

    }//GEN-LAST:event_hideActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed

        int i;
        for (i = 0; i < obj.getRowCount(); i++) {
            if (jTextFieldSearch.getText().equals(obj.getValueAt(i, 1))) {
                JOptionPane.showMessageDialog(this, "Eliminato");
                magazzino.eliminaProdotto(jTextFieldSearch.getText());
                obj.removeRow(i);
                break;
            } else {
                JOptionPane.showMessageDialog(this, "Non trovato");
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed
    private int modifyButtonClickCount = 0;
    private void ModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyActionPerformed

        modifyButtonClickCount++;
        if (modifyButtonClickCount % 2 == 1) {
            jTable1.setEnabled(true);
            jLabel1.setText("MODIFICA ATTIVA");
        } else if (modifyButtonClickCount % 2 == 0) {
            for (int i = 0; i < obj.getRowCount(); i++) {
                String codice = (String) obj.getValueAt(i, obj.findColumn("Codice"));
                String qtaDisp = obj.getValueAt(i, obj.findColumn("Qtà disponibile")).toString();
                String qtaArrivo = obj.getValueAt(i, obj.findColumn("Qtà in arrivo")).toString();
                int nuovaQtaDisp = 0;
                int nuovaQtaArrivo = 0;
                try {
                    if (!qtaDisp.isEmpty()) {
                        nuovaQtaDisp = Integer.parseInt(qtaDisp);
                    }
                    if (!qtaArrivo.isEmpty()) {
                        nuovaQtaArrivo = Integer.parseInt(qtaArrivo);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Inserire valori numerici validi.");
                    return;
                }
                magazzino.modificaProdotto(codice, nuovaQtaDisp, nuovaQtaArrivo);
            }
            jTable1.setEnabled(false);
            jLabel1.setText("");
        }
    }//GEN-LAST:event_ModifyActionPerformed


    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed

        int rowCount = obj.getRowCount();
        boolean found = false;

        for (int i = 0; i < rowCount; i++) {
            if (jTextFieldSearch.getText().equals(obj.getValueAt(i, 1))) {
                found = true;
                jTable1.setRowSelectionInterval(i, i);
                jTable1.setSelectionBackground(Color.GREEN);
                jTable1.setSelectionForeground(Color.BLACK);
                JOptionPane.showMessageDialog(this, "Trovato");
                magazzino.visualizzaProdotto(jTextFieldSearch.getText());
                break;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "Non trovato");
        }

    }//GEN-LAST:event_SearchActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("File di testo", "txt");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            if (!file.getName().toLowerCase().endsWith(".txt")) {
                file = new File(file.getAbsolutePath() + ".txt");
            }

            try {
                FileWriter w = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(w);
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    for (int j = 0; j < jTable1.getColumnCount(); j++) {
                        if (j > 0) {
                            bw.write(" ");
                        }
                        bw.write(jTable1.getValueAt(i, j).toString());
                    }
                    bw.newLine();
                }
                bw.close();
                w.close();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Salvataggio non riuscito");
            }
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed

        jTable1.setSelectionBackground(Color.white);
        jTextFieldProdotto.setText("");
        jTextFieldCodice.setText("");
        jTextFieldDescrizione.setText("");
        jTextFieldFornitore.setText("");
        jTextFieldPrezzo.setText("");
        jTextFieldDisp.setText("");
        jTextFieldArrivo.setText("");
        jTextFieldSearch.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void DisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayActionPerformed
        try {
            ByteArrayOutputStream output = QRCode.from(jTextFieldSearch.getText()).to(ImageType.PNG).stream();
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Seleziona la cartella di destinazione");
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int userSelection = fileChooser.showSaveDialog(this);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File selectedDirectory = fileChooser.getSelectedFile();
                String fileName = "Prodotto " + jTextFieldSearch.getText() + ".PNG";
                String filePath = selectedDirectory.getAbsolutePath() + File.separator + fileName;
                try (FileOutputStream fout = new FileOutputStream(new File(filePath))) {
                    fout.write(output.toByteArray());
                    fout.flush();
                    JOptionPane.showMessageDialog(this, "QR code creato");
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(this, "Errore durante la scrittura del file: " + e.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Errore durante la generazione del QR code: " + e.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DisplayActionPerformed

    private void outputAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputAllActionPerformed
        magazzino.visualizzaProdotti();
    }//GEN-LAST:event_outputAllActionPerformed

    private boolean isProductInTable(DefaultTableModel obj, String[] product) {
        for (int i = 0; i < obj.getRowCount(); i++) {
            boolean match = true;
            for (int j = 0; j < obj.getColumnCount(); j++) {
                if (!obj.getValueAt(i, j).toString().equals(product[j])) {
                    match = false;
                    break;
                }
            }
            if (match) {
                return true;
            }
        }
        return false;
    }

    private void LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("File di testo", "txt");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] row = line.split(" ");
                    Object[] lines = br.lines().toArray();
                    if (!isProductInTable(obj, row)) {
                        for (int i = 0; i < lines.length-1; i++) {
                            double prezzo = Double.parseDouble(row[4]);
                            int qtaDisp = Integer.parseInt(row[5]);
                            int qtaArrivo = Integer.parseInt(row[6]);
                            Prodotto prodotto = new Prodotto(row[0], row[1], row[2], row[3], prezzo, qtaDisp, qtaArrivo);
                            magazzino.aggiungiProdotto(prodotto);
                        }
                        obj.addRow(row);
                    } else {
                        JOptionPane.showMessageDialog(this, "Il contenuto del file è già presente nella tabella");
                        break;
                    }
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Errore nella lettura del file");
            }
        }
    }//GEN-LAST:event_LoadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Display;
    private javax.swing.JButton Load;
    private javax.swing.JButton Modify;
    private javax.swing.JButton Save;
    private javax.swing.JButton Search;
    private javax.swing.JButton hide;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelArrivo;
    private javax.swing.JLabel jLabelCodice;
    private javax.swing.JLabel jLabelDescrizione;
    private javax.swing.JLabel jLabelDisp;
    private javax.swing.JLabel jLabelFornitore;
    private javax.swing.JLabel jLabelPrezzo;
    private javax.swing.JLabel jLabelProdotto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldArrivo;
    private javax.swing.JTextField jTextFieldCodice;
    private javax.swing.JTextField jTextFieldDescrizione;
    private javax.swing.JTextField jTextFieldDisp;
    private javax.swing.JTextField jTextFieldFornitore;
    private javax.swing.JTextField jTextFieldPrezzo;
    private javax.swing.JTextField jTextFieldProdotto;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JButton outputAll;
    // End of variables declaration//GEN-END:variables
}
